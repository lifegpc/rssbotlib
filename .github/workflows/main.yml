# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  create-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Declare ref
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.vars.outputs.sha_short}}
          release_name: Release ${{ steps.vars.outputs.sha_short }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

      - name: Upload Release URL File
        uses: actions/upload-artifact@v2
        with:
          name: release_url
          path: release_url.txt

  build_ubuntu:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      # Runs a single command using the runners shell
      - name: Build
        run: ./github_action_workflow_ubuntu.sh
        shell: bash

      - name: Load Release URL File
        uses: actions/download-artifact@v2
        with:
          name: release_url

      - name: Get Upload URL
        id: get_release_info
        run: |
          value=`cat release_url.txt`
          echo ::set-output name=upload_url::$value
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Upload Build File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./release.7z
          asset_name: rssbotlib_ubuntu_${{ steps.get_release_info.outputs.sha_short }}.7z
          asset_content_type: application/x-7z-compressed

  build_windows:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw64/mingw-w64-x86_64-gcc mingw64/mingw-w64-x86_64-gnutls msys/p7zip mingw64/mingw-w64-x86_64-make mingw64/mingw-w64-x86_64-diffutils
      # Runs a single command using the runners shell
      - name: Build
        run: ./github_action_workflow_windows.sh

      - name: Load Release URL File
        uses: actions/download-artifact@v2
        with:
          name: release_url

      - name: Get Upload URL
        id: get_release_info
        run: |
          value=`cat release_url.txt`
          echo ::set-output name=upload_url::$value
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Upload Build File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./release.7z
          asset_name: rssbotlib_windows_${{ steps.get_release_info.outputs.sha_short }}.7z
          asset_content_type: application/x-7z-compressed
